# Generated by Django 5.2.4 on 2025-07-15 15:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Atributo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('num', 'Numérico'), ('str', 'Texto'), ('choice', 'Escolha')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=200)),
                ('custo_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unidade', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ProdutoInstancia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50)),
                ('quantidade', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='InstanciaComponente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=4, max_digits=10)),
                ('unidade', models.CharField(max_length=20)),
                ('custo_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('item_material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='produtos.itemmaterial')),
                ('instancia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='componentes', to='produtos.produtoinstancia')),
            ],
        ),
        migrations.CreateModel(
            name='ProdutoTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='templates', to='produtos.categoria')),
            ],
        ),
        migrations.AddField(
            model_name='produtoinstancia',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='instancias', to='produtos.produtotemplate'),
        ),
        migrations.CreateModel(
            name='FormulaTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expressao', models.TextField(help_text='Expressão global de cálculo, ex: sum(mat)+sum(mod)*1.2+overhead')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formulas', to='produtos.produtotemplate')),
            ],
        ),
        migrations.CreateModel(
            name='InstanciaAtributo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_texto', models.CharField(blank=True, max_length=200)),
                ('valor_num', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('atributo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='produtos.atributo')),
                ('instancia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atributos', to='produtos.produtoinstancia')),
            ],
            options={
                'unique_together': {('instancia', 'atributo')},
            },
        ),
        migrations.CreateModel(
            name='TemplateAtributo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obrigatorio', models.BooleanField(default=True)),
                ('ordem', models.IntegerField(default=0)),
                ('atributo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='produtos.atributo')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atributos', to='produtos.produtotemplate')),
            ],
            options={
                'unique_together': {('template', 'atributo')},
            },
        ),
        migrations.CreateModel(
            name='TemplateComponente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_expr', models.CharField(help_text='Use expressões em Python com atributos do template, ex: (altura+largura)*2', max_length=100)),
                ('unidade', models.CharField(max_length=20)),
                ('fator_perda', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('item_material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='produtos.itemmaterial')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='componentes', to='produtos.produtotemplate')),
            ],
            options={
                'unique_together': {('template', 'item_material')},
            },
        ),
    ]
